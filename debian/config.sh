configParse() {
    # Argument parsing

    case $1 in
    "-h")
        configHelp
        exit 0
        ;;
    "--help")
        configHelp
        exit 0
        ;;
    "")
        ;;
    *)
        DEBIAN_RELEASE=$1
        ;;
    esac

    # Post-parse check
    if [ -z "${DEBIAN_RELEASE}" ]; then
        echo "Error: \$DEBIAN_RELEASE is not set"
        configHelp
        exit 1
    fi

    # Check that directory exists
    if [ -d "${DEBIAN_RELEASE}" ]; then
        echo "\$DEBIAN_RELEASE" is "${DEBIAN_RELEASE}"
    else
        echo "Error: \$DEBIAN_RELEASE=${DEBIAN_RELEASE} Does not exist"
        exit 1
    fi
}


configHelp() {
    # Print help
    echo;
    echo "This script builds the rpm for a given Debian release"
    echo "It expects \$CHPL_RELEASE to be defined and \$DEBIAN_RELEASE to be"
    echo "defined or provided as command line argument"
    echo;
    echo "   ./<script> <release>"
    echo;
}


configSetup() {
    # Setup all the common variables and confirm inputs are defined

    # This variable is always read as an environment variable
    if [ -z ${CHPL_RELEASE} ]; then
        echo "\$CHPL_RELEASE is not defined"
        echo "Define via command line argument or environment variable"
        exit 1
    fi

    # This variable can be read as env var or passed as argument
    if [ -z ${DEBIAN_RELEASE} ]; then
        echo "\$DEBIAN_RELEASE is not defined"
        echo "Define via command line argument or environment variable"
        exit 1
    fi

    # User specific (for deployment)
    LPUSERNAME=balbrecht
    # PPA=TODO

    # Package specific
    PKG=chapel
    BINARY=chpl
    VERSION=1.13

    # Machine specific (generated dynamically)
    #DEBIAN=0ubuntu1
    ARCH=amd64

    TARBALL=${PKG}-${VERSION}.tar.gz
    ORIG_TARBALL=${PKG}_${VERSION}.orig.tar.gz

    # Directories
    SRC=${CHPL_RELEASE}
    SRC_BASENAME=$(basename ${CHPL_RELEASE})
    SRC_DIRNAME=$(dirname ${CHPL_RELEASE})
    DEB_SRC=debian

    # Package Files
    BASENAME=${PKG}_${VERSION}-${DEBIAN}

    CHANGES=${BASENAME}_${ARCH}.changes
    DEB=${BASENAME}_${ARCH}.deb
    DEB_TAR=${BASENAME}.debian.tar.gz
    DSC=${BASENAME}.dsc
}

configClean() {
    # Clean up files generated by scripts

    # Create gzipped tarball from source
    rm -f ${TARBALL}

    # Generate template via bzr
    rm -f ${ORIG_TARBALL}
    # Double check 'rm -rf ${VAR}' (could cost you your life (or home directory))
    if [ -z ${PKG} ]; then
        echo "Critical Error: \${PKG} is not defined"
        exit 1
    fi
    rm -rf ${PKG}

    ### debian files ###
    rm -rf ${PKG}/debian

    # Clean package files
    rm -f ${CHANGES}
    rm -f ${DEB}
    rm -f ${DEB_TAR}
    rm -f ${DSC}
    rm -rf build-area
}
